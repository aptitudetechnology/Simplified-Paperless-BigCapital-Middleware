Here are the instructions you can use in a new session to get a focused solution:

---

**Problem Summary:**
I have a Flask application with a configuration flag `USE_MODULAR_ROUTES = True/False` in `app.py` that should allow seamless switching between legacy and modular routing approaches. Currently, when set to `True`, I get this error:

```
BuildError: Could not build url for endpoint 'web.configuration'. Did you mean 'config.configuration' instead?
```

The issue is that my modular approach creates blueprints with different names than my legacy approach, breaking template URL references.

**Requirements:**
1. I want to be able to toggle `USE_MODULAR_ROUTES` between `True` and `False` and have everything work seamlessly
2. I prefer to make changes ONLY to `app.py` if possible, or minimal changes to other files
3. The solution should maintain template compatibility without requiring template updates
4. My templates currently reference endpoints like `web.configuration`, `web.something`, etc.

**Current Structure:**
- Legacy approach: Uses blueprints named `api` and `web`
- Modular approach: Creates separate `api`, `web`, and `config` blueprints
- Templates expect endpoints like `web.configuration` to exist

**Question:**
How can I modify my `app.py` file to ensure that when `USE_MODULAR_ROUTES = True`, the blueprint names and endpoint names remain consistent with the legacy approach? I'm open to solutions like:
- Passing blueprint names as parameters to factory functions
- Merging blueprints during registration
- Any other approach that keeps changes minimal and maintains seamless switching

Please provide the specific code changes needed in `app.py` and any minimal changes required in other files.

---

This should give you a focused response on exactly what you need to fix the blueprint naming issue while maintaining your seamless switching capability.
